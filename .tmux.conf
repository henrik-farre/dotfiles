######################################################################################################
# Notes
#
# Shortcuts:
#
# Prefix + !: Make pane into window
#        + w: Window list
#        + q: pane numbers
#        + &: kill window
#
# good practice: don't use different aliases for the same command
#   set  --> set-option
#   setw --> set-window-option
#   run  --> run-shell
#   bind --> bind-key
#       -r flag: enable keep hitting bind key without prefix
#       -n flag: enable bind key without prefix
#       -g flag: global
#
# set-option (alias set)
# -w : window option (set-window-option, alias setw)
# -s : server option
# else session option
# -g global session or window option is set
# -a append
#
# # this is the best way I can find to manage host-conditional sessions
# with tmux's current config capabilities
# if '[ `hostname -s` = lupin ] && ! tmux has-session -t main' 'source-file $HOME/.tmux/lupin.conf'
#
# set-option -gw window-status-format "#I:#10W#F"

# Avoid running a login shell each time
set -g default-command "${SHELL}"

#################################################
# Status bar
# Enable utf-8
# set-option -g status-utf8 on
# Status bar on top
set-option -g status-position top

set -g status-interval 0
# set -g status-justify left # center align window list
# set -g status-left-length 20
# set -g status-right-length 140
# set -g window-status-separator " "
set -g status-left '#[fg=colour243,bg=colour238]#S:#I:#P#[default]#[fg=colour238]'
set -g status-right '#[fg=colour238]#[fg=colour243,bg=colour238]#H'

set -g window-status-format "#[fg=colour243,bg=colour234]#I  #W"
set -g window-status-current-format "#[fg=colour234,bg=colour66]#[fg=colour255,bg=colour66] #I #[fg=colour66,bg=colour74] #[fg=colour255]#W #[fg=colour74,bg=colour66]#[fg=colour255]#F#[fg=colour66,bg=colour234]"

# scrollback buffer n lines
set -g history-limit 10000

# Fix Shift-PageUp/Shift-PageDown in urxvt
# Support urxvt middle click
# set-option -ga terminal-override ',rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007'
# Fix zsh completion menu: http://sourceforge.net/p/tmux/mailman/tmux-users/thread/20111227185155.GA5422@Xye/
# set -g terminal-overrides 'rxvt-unicode*:sitm@,ritm@'
# Enable Cursor shape in tmux
# https://github.com/neovim/neovim/pull/3165
# set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set -ga terminal-overrides ",xterm-termite:Tc"

#################################################
# Mouse
set -g mouse off
# Mouse scroll is nice, but it requires shift+left mouse to select text
# set -g mouse on
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind -n WheelDownPane select-pane -t= \; send-keys -M

# in copy mode, use vi bindings
set -g mode-keys vi
# Statusline/Commandline:
set -g status-keys vi

# Preserves terminal contents when interactive application starts
set -g alternate-screen on

#################################################
# xterm window title
#
# Automatically set window title
set -g automatic-rename
set -g set-titles on
# Seems to work with current configuration, and is also updated after leaving vim
set -g set-titles-string '#W'
# set -g set-titles-string '#T'

# Zero-based indexing for windows and panes isn't terribly sensible.
# it's all the way to the right
set -g base-index 1
set -g pane-base-index 1

# Set window notifications
set -g monitor-activity on
set -g visual-activity on

# Window remains after shell/program exits
# Disabled because panes will just say "Pane is dead"
# set -g remain-on-exit on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# focus events enabled for terminals that support them
set -g focus-events on

# Disable wait after escape, so vim is usable
set -g escape-time 0

# To make ctrl-arrow, etc. work
# If you enable xterm-keys in your tmux.conf, then you need to build a custom terminfo to declare the new escape codes
# https://wiki.archlinux.org/index.php/tmux#Setting_the_correct_term
# set -g xterm-keys on

#################################################
# colors
# If not set, will just set TERM=screen
set -g default-terminal "screen-256color"
# To much trouble when ssh, or shell in docker container
# set -g default-terminal "tmux-256color"

# Highlight active window
set -g window-status-current-bg white
set -g window-status-current-fg colour0
# Status bar has a dim gray background
set -g status-bg colour234
# Light blue
set -g status-fg colour74
set -g status-left-length 15

# Inactive pane color is gray
set -g pane-border-fg colour238
# Active pane color is green
set -g pane-active-border-fg colour34
# Active pane background color is dim gray
set -g pane-active-border-bg colour234

# Update vars
set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION SSH_TTY GNOME_KEYRING_PID GNOME_KEYRING_SOCKET"

# If 3 windows are open, and #2 is closed, #3 is renamed to #2: http://tilvim.com/2014/07/30/tmux-and-vim.html
set-option -g renumber-windows on

#################################################
# Keybindings
# act like GNU screen
unbind C-b
set -g prefix C-a

# Testing prefix F12 for tmux: https://www.reddit.com/r/tmux/comments/3clbfx/_/
# set -g prefix F12
# bind F12 send-prefix
# Test using Super_l, defined in .xmodmap and .Xresources
# https://github.com/shicks/config/blob/master/Xdefaults
#set -g prefix M-a

# To close to C -
unbind .

# urxvt tab like window switching (-n: no prior escape seq)
# -c working directory, default mapping prefix-c uses same working dir
bind -n S-down new-window -c ~/
bind -n S-up command-prompt 'rename-window %%'
bind -n S-left prev
bind -n S-right next
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1

# Copymode
unbind [
bind Escape copy-mode                # Enter copy mode using escape
bind -t vi-copy Escape cancel        # exit copy mode; or hit q

unbind C-p
# bind C-p paste-buffer
#
# bind p paste-buffer                  # paste; default ]
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'V' select-line      # visual line
# To system clipboard
# http://unix.stackexchange.com/questions/131011/use-system-clipboard-in-vi-copy-mode-in-tmux
# https://github.com/tmux-plugins/tmux-yank
bind -t vi-copy y copy-pipe 'xsel -i -b'
# bind -t vi-copy 'y' copy-selection   # yank
bind -t vi-copy 'r' rectangle-toggle # visual block toggle

# # Copy/paste
# # https://wiki.archlinux.org/index.php/tmux#ICCCM_selection_integration
# bind C-c run "tmux show-buffer | xsel -i -b"
bind C-p run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer"
bind p run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer"

# Split panes, always open in current dir, new windows open in ~/
unbind %
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
# Vim style split
bind v split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'

# http://superuser.com/questions/600286/tmux-move-pane-to-new-window
bind S choose-window "join-pane -v -s "%%""
bind V choose-window "join-pane -h -s "%%""

# Blink active pane: https://www.reddit.com/r/tmux/comments/3paqoi/tmux_21_has_been_released/
bind h run "~/bin/tmux-select-pane.sh -L"
bind j run "~/bin/tmux-select-pane.sh -D"
bind k run "~/bin/tmux-select-pane.sh -U"
bind l run "~/bin/tmux-select-pane.sh -R"

# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# To annoying to loose C-l ?
# https://gist.github.com/mislav/5189704
## Smart pane switching with awareness of vim splits
# bind -n C-h if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-h" "select-pane -L"
# bind -n C-j if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-j" "select-pane -D"
# bind -n C-k if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-k" "select-pane -U"
# bind -n C-l if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-l" "select-pane -R"
# Restore clear using prefix+ctrl+l
# bind C-l send-keys 'C-l'

# Enable nested tmux
bind a send-prefix

bind-key r source-file ~/.tmux.conf \; \
  display-message "Reloaded ~/.tmux.conf"

bind S choose-session

if-shell "[[ $NO_POWERLINE == 1 ]]" 'set -g window-status-current-format "#I:#10W#F"'
