######################################################################################################
# Notes
#
# Shortcuts:
#
# Prefix + !: Make pane into window
#        + w: Window list
#        + q: pane numbers
#        + &: kill window
#
# good practice: don't use different aliases for the same command
#   set  --> set-option
#   setw --> set-window-option
#   run  --> run-shell
#   bind --> bind-key
#       -r flag: enable keep hitting bind key without prefix
#       -n flag: enable bind key without prefix
#       -g flag: global
#
# set-option (alias set)
# -w : window option (set-window-option, alias setw)
# -s : server option
# else session option
# -g global session or window option is set
# -a append
#
# # this is the best way I can find to manage host-conditional sessions
# with tmux's current config capabilities
# if '[ `hostname -s` = lupin ] && ! tmux has-session -t main' 'source-file $HOME/.tmux/lupin.conf'
#
# set-option -gw window-status-format "#I:#10W#F"

# Avoid running a login shell each time
set -g default-command "${SHELL}"

#################################################
# Status bar
set -g status-position top
set -g status-interval 15

%if "#{==:#{host},protonpack}"
set -g status-left '#[fg=colour255,bg=colour66] + #[fg=colour66,bg=colour238]#[fg=colour243,bg=colour238] #H #[default]#[fg=colour238]'
%else
set -g status-left '#[fg=colour243,bg=colour238]#H #[default]#[fg=colour238]'
%endif

set -g status-right '#(~/.config/tmux/left-status.sh)'
# set -g status-right '#[fg=colour238]#[fg=colour243,bg=colour238]#H'
set -g status-right-length 100

# Tmux window title
set -g window-status-format "#[fg=colour234,bg=colour232]#[fg=colour243,bg=colour232] #I   #[fg=colour243]#T   #[fg=colour232,bg=colour234]"
set -g window-status-current-format "#[fg=colour234,bg=colour66]#[fg=colour255,bg=colour66] #I #[fg=colour66,bg=colour74] #[fg=colour255]#T #[fg=colour74,bg=colour66]#[fg=colour255]#F#[fg=colour66,bg=colour234]"
set -g window-status-separator ''

# scrollback buffer n lines
set -g history-limit 50000

# Enable truecolor (Tc), https://wiki.archlinux.org/index.php/tmux#24-bit_color
# Fix scolling when pasting using middel mouse button (smcup/rmcup)
# set -ga terminal-overrides ",xterm*:Tc:smcup@:rmcup@"
# WSL:
set -sa terminal-overrides ",xterm-256color:Tc"

#################################################
# Mouse
set -g mouse on
# unbind -Troot WheelUpPane
# unbind -Troot WheelDownPane

# Use vi bindings when copying and statusline/commandline:
set -g mode-keys vi
set -g status-keys vi

# Preserves terminal contents when interactive application starts
set -g alternate-screen on

#################################################
# xterm window title
#
# Automatically set window title
set -g automatic-rename on
set -g allow-rename on
set -g set-titles on
# Set terminal window title
# Seems to work with current configuration, and is also updated after leaving vim
set -g set-titles-string '#T'

# Zero-based indexing for windows and panes isn't terribly sensible it's all the way to the right
set -g base-index 1
set -g pane-base-index 1

# Set window notifications
set -g monitor-activity off
set -g visual-activity off

# Window remains after shell/program exits
# Disabled because panes will just say "Pane is dead"
# set -g remain-on-exit on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# focus events enabled for terminals that support them
set -g focus-events on

# Disable wait after escape, so vim is usable
# - set to 1 because of https://github.com/microsoft/WSL/issues/5931
set -g escape-time 1

# To make ctrl-arrow, etc. work
# If you enable xterm-keys in your tmux.conf, then you need to build a custom terminfo to declare the new escape codes
# https://wiki.archlinux.org/index.php/tmux#Setting_the_correct_term
# set -g xterm-keys on

#################################################
# colors
# If not set, will just set TERM=screen
set -g default-terminal "screen-256color"
# To much trouble when ssh, or shell in docker container
#set -g default-terminal "tmux-256color"

# Highlight active window
set -g window-style 'fg=colour245,bg=colour235'
set -g window-active-style 'fg=white,bg=#000000'
set -g status-bg colour234
set -g status-fg colour74
set -g status-left-length 100

set -g pane-border-status top
set -g pane-border-format "#{?pane_active,#[fg=colour74],#[fg=colour234]} #{s|/home/enrique|~|:pane_current_path}  #{pane_current_command} "
set -g pane-border-style 'fg=colour234,bg=colour0'
set -g pane-active-border-style 'fg=colour74,bg=colour234'

# Update vars
set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION SSH_TTY GNOME_KEYRING_PID GNOME_KEYRING_SOCKET"

# If 3 windows are open, and #2 is closed, #3 is renamed to #2: http://tilvim.com/2014/07/30/tmux-and-vim.html
set-option -g renumber-windows on

#################################################
# Keybindings
# act like GNU screen
unbind C-b
set -g prefix C-a
# To close to C -
unbind .

# urxvt tab like window switching (-n: no prior escape seq)
# -c working directory, default mapping prefix-c uses same working dir
bind -n S-down new-window -c ~/
bind -n S-up command-prompt 'rename-window %%'
bind -n S-left prev
bind -n S-right next
bind -n C-left swap-window -t -1\; select-window -t -1
bind -n C-right swap-window -t +1\; select-window -t +1

# Copy / Paste
unbind [
unbind C-p
bind Escape copy-mode                        # Enter copy mode using escape
bind -T copy-mode-vi 'Escape' send -X cancel # exit copy mode; or hit q
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle # visual block toggle

if-shell -b 'echo $XDG_SESSION_TYPE | grep -q x11' {
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xsel -i -b"
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xsel -i -b'
  bind-key C-p run "xsel -o -b | tmux load-buffer - ; tmux paste-buffer -p"
  bind-key p run "xsel -o -b | tmux load-buffer - ; tmux paste-buffer -p"
}

if-shell -b 'echo $XDG_SESSION_TYPE | grep -q wayland' {
  # -T: use root prefix table: no need to press C-a
  # -n: alias for -T root
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "wl-copy --trim-newline"
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'wl-copy --trim-newline'
  # bind-key C-p run "wl-paste --no-newline | tmux load-buffer - ; tmux paste-buffer -p"
  bind-key p run "wl-paste --no-newline | tmux load-buffer - ; tmux paste-buffer -p"
  bind-key -n MouseDown2Pane run -b "wl-paste --primary --no-newline | tmux load-buffer - ; tmux paste-buffer"
}

# Split panes, always open in current dir, new windows open in ~/
unbind %
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
# Vim style split
bind v split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'

# http://superuser.com/questions/600286/tmux-move-pane-to-new-window
bind S choose-window "join-pane -v -s "%%""
bind V choose-window "join-pane -h -s "%%""

# Blink active pane: https://www.reddit.com/r/tmux/comments/3paqoi/tmux_21_has_been_released/
# bind h run "~/bin/tmux-select-pane.sh -L"
# bind j run "~/bin/tmux-select-pane.sh -D"
# bind k run "~/bin/tmux-select-pane.sh -U"
# bind l run "~/bin/tmux-select-pane.sh -R"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Open new window with mouse click (for touch screen)
bind -Troot MouseUp1StatusLeft new-window

# Enable nested tmux
bind a send-prefix

bind-key r source-file ~/.config/tmux/tmux.conf \; \
  display-message "Reloaded ~/.config/tmux/tmux.conf"

bind S choose-session

bind B run-shell ~/.config/tmux/tmux_1password_get_pw.sh
