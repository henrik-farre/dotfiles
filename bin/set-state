#!/bin/bash

exec > >(tee "/tmp/hest.log") 2>&1

if [[ -z $1 ]]; then
  echo "Missing arg"
  exit 1
fi

function cpu_powersetting {
  local MODE
  case $1 in
    powersave)
      MODE=$1
      ;;
    ondemand)
      MODE=$1
      ;;
    performance)
      MODE=$1
      ;;
    *)
      echo "Unknown cpu power setting $1"
      return 1
      ;;
  esac
  sudo cpupower frequency-set -g "$MODE"
  return 0
}

function backlight_control {
  if [[ $1 == 'on' ]]; then
    xbacklight -set 50
  else
    xbacklight -set 100
  fi
}

function cpu_pstate_control {
  if [[ $1 == 'off' ]]; then
    sudo sh -c "echo 1 > /sys/devices/system/cpu/intel_pstate/no_turbo"
    sudo sh -c "echo 25 > /sys/devices/system/cpu/intel_pstate/max_perf_pct"
  else
    sudo sh -c "echo 0 > /sys/devices/system/cpu/intel_pstate/no_turbo"
    sudo sh -c "echo 100 > /sys/devices/system/cpu/intel_pstate/max_perf_pct"
  fi
}

function servicesstop {
  return 0
  #pkill dropboxd
  #pkill synergyc
  #systemctl --user stop conky
  #systemctl --user stop syncthing
  #systemctl --user stop syncthing-inotify
}

function servicesstart {
  return 0
  #systemctl --user start syncthing
  #systemctl --user start syncthing-inotify
  #systemctl --user start conky
}

function nvidia_gpu_powersetting {
  if [[ -f /usr/bin/nvidia-settings ]]; then
    case $1 in
      power)
        nvidia-settings -a [gpu:0]/GPUPowerMizerMode=1
        ;;
      adaptive)
        nvidia-settings -a [gpu:0]/GPUPowerMizerMode=0
        ;;
    esac
  fi
}

function disablealt {
  return 0
  # xfconf-query -c xfwm4 -p /general/easy_click -n -t string -s "Ingen"
}

function enablealt {
  return 0
  # xfconf-query -c xfwm4 -p /general/easy_click -n -t string -s "Alt"
}

function screensetup_single {
  xrandr --output DVI-I-1 --off
}

function screensetup_dual {
  xrandr --output DVI-I-1 --auto
  xrandr --output DVI-I-1 --right-of HDMI-0
}

function conky_reload {
   pkill -HUP conky || true
}

function xcape_stop {
  systemctl --user stop xcape
}

function xcape_start {
  systemctl --user start xcape
}

MODE=$1

case $MODE in
  powersave)
    cpu_powersetting powersave
    backlight_control on
    cpu_pstate_control off
    servicesstop
    nvidia_gpu_powersetting adaptive
    ;;
  performance)
    cpu_powersetting performance
    servicesstart
    cpu_pstate_control on
    backlight_control off
    ;;
  gameon)
    screensetup_single
    disablealt
    cpu_powersetting performance
    servicesstop
    nvidia_gpu_powersetting power
    conky_reload
    xcape_stop
    ;;
  gameoff)
    screensetup_dual
    enablealt
    cpu_powersetting powersave
    servicesstart
    nvidia_gpu_powersetting adaptive
    conky_reload
    xcape_start
   ;;
 macbook-hidpi-on)
   gsettings set org.cinnamon panels-height "['1:28']"
   sleep 1
   gsettings set org.cinnamon.desktop.interface scaling-factor "uint32 2"
   sleep 1
   gsettings set org.cinnamon active-display-scale "2"
   sleep 1
   gsettings set org.cinnamon.desktop.interface text-scaling-factor "0.75"
   sleep 1
   conky_reload
   ;;
 macbook-hidpi-off)
   gsettings set org.cinnamon panels-height "['1:34']"
   sleep 1
   gsettings set org.cinnamon.desktop.interface scaling-factor "uint32 1"
   sleep 1
   gsettings set org.cinnamon active-display-scale "1"
   sleep 1
   gsettings set org.cinnamon.desktop.interface text-scaling-factor "1"
   sleep 1
   conky_reload
   ;;
 wacom-setup)
   DEVICE_ID=$(xsetwacom --list devices | awk '{if ($9 == "STYLUS") print $7}')
   xsetwacom --set "$DEVICE_ID" MapToOutput "1920x1200+0+0"
   ;;
 steam-bigpicture)
   screensetup_single
   xrandr --output HDMI-0 --mode 1920x1080
   disablealt
   cpu_powersetting performance
   servicesstop
   nvidia_gpu_powersetting power
   conky_reload
   export SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS=0
   /usr/bin/steam-native -bigpicture
   ;;
 *)
   echo "Unknown mode"
   ;;
esac
